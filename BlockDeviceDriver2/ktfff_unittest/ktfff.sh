#!/bin/bash
source lib/config.sh
source lib/install.sh
source lib/kerN_ver_patch.sh
source lib/makefile.sh
source lib/message.sh
source lib/unittest.sh

#######################################################
#              Ktfff Unittest Runner                  #
#                                                     #
#   install         - install ktfff framework         #
#   run             - build && run all unittest       #
#   run --test=     - build && run single unittest    #
#   run --suite=    - build && run single unittest    #
#   clean           - clean all generated file        #
#   uninstall       - uninstall ktfff framewokr       #
#                                                     #
#######################################################

#########################################################################################
#                                   Run Flow                                            #                                                                
#   1. unittest_main                                    Main function.                  #
#                   ↓                                                                   # 
#   2. unittest_check_build_file                        Get the select test file & test #
#      unittest_get_filter                              filter list (--test, --suite).  #
#                   ↓                                                                   #
#   3. build_all_kern_module                                                            #
#       -   build_unittest_kerN_module                  Build each test file module.    #
#           -   gen_build_kmodule_comp                  Generate kernel Makefile.       #
#           -   gen_kern_module_mk $kern_module_name                                    #
#           -   gen_build_kmodule ${kerN_ver}                                           #
#                   ↓                                                                   #
#   4. unittest_start                                                                   #
#                                                                                       #
#########################################################################################

function clean_env()
{
    ktfff_info "KTFFF CLEAN"
    find $KTFFF_DIR/../ -type f -name "*.o.*" -delete
    find $KTFFF_DIR/../ -type f -name ".*.cmd" -delete
    find $KTFFF_DIR/../ -type f -name "*.o" -delete
    find $KTFFF_DIR/../ -type f -name "*.h.orig" -delete
    sudo /bin/rm -rf *.symvers *.mod.c Module.markers modules.order .tmp_versions *.xml 
    sudo /bin/rm -rf *.ko
    sudo /bin/rm -rf Makefile
    sudo /bin/rm -rf $unitM_temp_dir
    sudo /bin/rm -rf $unitMK_temp_dir
    sudo /bin/rm -rf $unit_output_dir
}

function ktfff_insmod()
{   
    cmd_err=$(sudo insmod $BUILD_DIR/ktf/kernel/ktf.ko)
    if [[ $cmd_err = *"No such file or directory"* ]]; then
        echo "Should execute sudo ./ktfff.sh install first." 
    fi
}

function unittest_main()
{
    local suite_list=
    local filter=""

    ktfff_event "Mkdir unittest temp folder."
    mkdir -p $unitM_temp_dir
    mkdir -p $unitMK_temp_dir
    mkdir -p $unit_output_dir

    # If options exist --test, --suite, if not will run all ./unittests/files
    if [ $# -gt 0 ]; then
        set -e 
        suite_list=$(unittest_check_build_file $@)
        filter=$(unittest_get_filter $@)
        ktfff_info "BUILDING KERNEL MODULE"
        build_all_kern_module $suite_list
        set +e
    else
        ktfff_info "BUILDING KERNEL MODULE"
        build_all_kern_module $KTFFF_DIR/unittests/*.c
    fi

    ktfff_insmod
    ktfff_info "UNNITEST START"
    unittest_start $filter
    ktfff_info "UNNITEST COMPLETE"
}

export LANG=en_US


# --- Command line help -------------------------------------------
function usage()
{
    echo -e "\nUsage: $0 [argument...]"
    echo
    echo -e "  install                      install ktfff runnner (gtest, ktf)."
    echo -e "  run                          build all kernel module and run all unittest case."
    echo -e "  run --test=<testcase>        build specific kernel module and run specific unittest case."
    echo -e "  run --suite=<testfile.c>     build specific kernel module and run specific unittest file."
    echo -e "  clean                        remove all file generated by ktfff."
    echo -e "  -h, --help                   display this help text and exit."
    echo
    exit 1
}

# --- Ktfff main --------------------------------------------------
while [ "$#" ]; do
    case $1 in
        install )
            shift
            ktfff_info "KTFFF INSTALL\n"
            ktfff_setup
            exit
            ;;
        run )
            shift
            unittest_main $@
            exit
            ;;
        clean )
            shift
            clean_env
            exit
            ;;
        uninstall )
            shift
            ktfff_uninstall
            exit
            ;;
        -h | --help )
            usage
            ;;
        * )
            usage
    esac
    shift
done 
